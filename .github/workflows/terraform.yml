name: 'Terraform Deploy'

on:
  push:
    branches: [ "main2" ]
    
jobs:
  terraform:
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Plan Terraform Changes
      env:
        HUAWEICLOUD_ACCESS_KEY: ${{ secrets.HUAWEICLOUD_ACCESS_KEY }}
        HUAWEICLOUD_SECRET_KEY: ${{ secrets.HUAWEICLOUD_SECRET_KEY }}
      run: 
        terraform plan -var "huaweicloud_access_key=$HUAWEICLOUD_ACCESS_KEY" -var "huaweicloud_secret_key=$HUAWEICLOUD_SECRET_KEY"
      working-directory: terraform

    - name: Apply Terraform Changes
      env:
        HUAWEICLOUD_ACCESS_KEY: ${{ secrets.HUAWEICLOUD_ACCESS_KEY }}
        HUAWEICLOUD_SECRET_KEY: ${{ secrets.HUAWEICLOUD_SECRET_KEY }}
      run: 
        terraform apply -auto-approve -var "huaweicloud_access_key=$HUAWEICLOUD_ACCESS_KEY" -var "huaweicloud_secret_key=$HUAWEICLOUD_SECRET_KEY"
      working-directory: terraform

    - name: Get CCE cluster id ###TODO fill
      run: echo "CCE_CLUSTER_ID=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV ###somehow

  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Huawei Cloud CLI
        run: |
          curl -sSL https://repo.huaweicloud.com/hcloud-cli/deb/hcloud-cli.deb -o hcloud-cli.deb
          sudo dpkg -i hcloud-cli.deb
          sudo apt-get update
          sudo apt-get install -f
          
      - name: Authenticate with Huawei Cloud CLI
        run: |
          echo "$HCLOUD_ACCESS_KEY" > access_key.txt
          echo "$HCLOUD_SECRET_KEY" > secret_key.txt
          hcloud configure --access-key-file access_key.txt --secret-key-file secret_key.txt --region tr-west-1

        env:
          HCLOUD_ACCESS_KEY: ${{ secrets.HUAWEICLOUD_ACCESS_KEY }}
          HCLOUD_SECRET_KEY: ${{ secrets.HUAWEICLOUD_SECRET_KEY }}

      - name: Get Kubeconfig from Huawei Cloud
        id: get_kubeconfig
        run: |
          # Replace <cluster-id> with your actual cluster ID
          kubeconfig=$(hcloud cce cluster get-kubeconfig --cluster-id ${{ env.CCE_CLUSTER_ID Failures }} )
          echo "KUBECONFIG=$kubeconfig" >> $GITHUB_ENV ### hcloud CCE CreateKubernetesClusterCert --cli-region="tr-west-1" --Content-Type="application/json" --cluster_id="1234" --duration=1825

      - name: Verify kubectl access
        run: |
          # The KUBECONFIG environment variable should now contain the kubeconfig
          echo "$KUBECONFIG" > $HOME/.kube/config
          kubectl get nodes
